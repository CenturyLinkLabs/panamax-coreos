#! /bin/bash

CONTAINER_NAME_UI="PMX_UI"
CONTAINER_NAME_API="PMX_API"
PRIVATE_REPO=74.201.240.198:5000
NAMESPACE=panamax
IMAGE_API=panamax-api
IMAGE_UI=panamax-ui
COREOS_ENDPOINT="http://172.17.42.1"
IMAGE_TAG=stable

function operatePanamax {
 sudo systemctl $1 panamax-api.service
 sudo systemctl $1 panamax-ui.service
}

function uninstallPanamax {
    echo "Uninstalling Panamax."
    operatePanamax stop
    operatePanamax disable
    sudo rm /etc/systemd/system/panamax*.service
    sudo rm /etc/systemd/user/*
    sudo rm units/panamax*.service
}

function installPanamax {
    #if [[ "$operation" == "reinstall" ]]; then
    #    uninstallPanamax
    #fi

    echo "Installing Panamax..."
    startCoreOSServices
    /usr/bin/docker pull $PRIVATE_REPO/$IMAGE_API:$IMAGE_TAG
    /usr/bin/docker pull $PRIVATE_REPO/$IMAGE_UI:$IMAGE_TAG
    writeUnitFile
    sudo cp units/* /etc/systemd/system/
    operatePanamax enable
    operatePanamax start
    waitUntilStarted
    echo "Panamax install complete"
}

function writeUnitFile {
 sudo echo "[Unit]
      Description=Panamax API
      After=docker.service
      Requires=docker.service

      [Service]
      ExecStartPre=-/usr/bin/docker rm -f $CONTAINER_NAME_API
      ExecStart=$(getRunCmdAPI)
      ExecStop=/usr/bin/docker stop $CONTAINER_NAME_API
      Restart=always

      [Install]
      WantedBy=multi-user.target" > units/panamax-api.service

 sudo echo "[Unit]
      Description=Panamax UI
      After=panamax-api.service
      Requires=panamax-api.service

      [Service]
      ExecStartPre=-/usr/bin/docker rm -f $CONTAINER_NAME_UI
      ExecStart=$(getRunCmdUI)
      ExecStop=/usr/bin/docker stop $CONTAINER_NAME_UI
      Restart=always

      [Install]
      WantedBy=multi-user.target" > units/panamax-ui.service
}

function getRunCmdAPI {
    echo "/usr/bin/docker run --name $CONTAINER_NAME_API -v /var/panamax-data:/var/app/panamax-api/db/mnt -v /var/run/docker.sock:/run/docker.sock:rw -e PANAMAX_ID="$PANAMAX_ID"  -e JOURNAL_ENDPOINT=$COREOS_ENDPOINT:19531 -e FLEETCTL_ENDPOINT=$COREOS_ENDPOINT:4001 -t  -p 3001:3000 " $PRIVATE_REPO/$IMAGE_API:$IMAGE_TAG
}

function getRunCmdUI {
    echo "/usr/bin/docker run --name $CONTAINER_NAME_UI -v /var/run/docker.sock:/run/docker.sock:rw  --link $CONTAINER_NAME_API:PMX_API  -p 3000:3000 " $PRIVATE_REPO/$IMAGE_UI:$IMAGE_TAG
}

function startCoreOSServices {
   sudo systemctl stop update-engine-reboot-manager.service
   sudo systemctl mask update-engine-reboot-manager.service
   sudo systemctl stop update-engine.service
   sudo systemctl mask update-engine.service
   sudo systemctl enable etcd
   sudo systemctl start etcd
   sudo systemctl enable fleet.service
   sudo systemctl start fleet.service
   #if [[ `grep systemd-journal-gateway /etc/passwd` == "" ]]; then
   # sudo useradd --system systemd-journal-gateway
   #fi
   sudo systemctl enable systemd-journal-gatewayd.socket
   sudo systemctl start systemd-journal-gatewayd.socket
}

function restartPanamax {
  echo "Restarting Panamax"
  operatePanamax restart
  waitUntilStarted
  echo "Panamax restarted"
}

function stopPanamax {
  echo Stopping Panamax
  operatePanamax stop
  echo Panamax Stopped.
}

function updatePanamax {
    echo Updating Panamax
    uninstallPanamax
    installPanamax
    echo Panamax Updated
}
function waitUntilStarted {
    logStartTime="`date +'%Y-%m-%d %H:%M:%S'`"
    #echo "$logStartTime"
    regex='Started Panamax UI'
    journalctl --since="$logStartTime" -f | grep  'PMX_API\|PMX_UI\|Panamax' | while read line; do
       echo $line
       if [[ $line == *$regex* ]]; then
         pkill -9 -P $$ journalctl
       fi
    done
}

function showHelp {
    echo ""
    echo "Usage:
         ./setup.sh <install/reinstall/restart/stop>
         ./setup.sh "
    echo ""
}

function readParams {
    for i in "$@"
    do
    case $i in
        --dev)
        IMAGE_TAG=dev
        ;;
        --stable)
        IMAGE_TAG=latest
        ;;
        install)
        operation=install
        ;;
        reinstall)
        operation=reinstall
        ;;
        uninstall)
        operation=uninstall
        ;;
        stop)
        operation=stop
        ;;
        start)
        operation=restart
        ;;
        restart)
        operation=restart
        ;;
        update)
        operation=update
        ;;
        -pid=*)
        PANAMAX_ID="${i#*=}"
        ;;
        *)
        exit 1;
        ;;
    esac
    done
}

function main {
    readParams "$@"
    if [[ $# -gt 0 ]]; then
        case $operation in
            install) installPanamax && exit 0 || { showHelp; exit 1; } ;;
            reinstall) installPanamax && exit 0 || { showHelp; exit 1; } ;;
            restart) restartPanamax || { showHelp; exit 1; } ;;
            stop) stopPanamax || { showHelp; exit 1; } ;;
            update) updatePanamax || { showHelp; exit 1; } ;;
            *) showHelp;;
        esac
    else
        echo "Please select one of the following options: "
        select operation in "install" "restart" "reinstall" "update"; do
        case $operation in
            install) installPanamax && exit 0; break;;
            reinstall   ) installPanamax && exit 0; break;;
            restart) restartPanamax; break;;
            stop) stopPanamax; break;;
            update) updatePanamax; break;;
        esac
        done
    fi
}

main "$@";

